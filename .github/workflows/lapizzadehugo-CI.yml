# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: lapizzadehugo CI

on:
  push:
    branches: ['master']
  pull_request:
    branches: ['master']

jobs:
  build:
    runs-on: self-hosted

    strategy:
      matrix:
        node-version: [22.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      # Agregar cachÃ© para npm y Next.js
      - name: Cache dependencies and Next.js build cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
              ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-

      # Crear archivo .env.local con las variables y secrets
      - name: Crear archivo .env
        run: |
          echo "NEXT_PUBLIC_URL_WEB=${{ vars.NEXT_PUBLIC_URL_WEB }}" >> .env
          echo "NEXT_PUBLIC_EMAIL=${{ vars.NEXT_PUBLIC_EMAIL }}" >> .env
          echo "EMAIL_PASS=${{ secrets.EMAIL_PASS }}" >> .env

      - run: npm i
      - run: npm run build --if-present
      - run: pm2 reload la-pizza-de-hugo-web
